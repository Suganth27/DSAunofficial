Program 11:

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int num1,num2,data,i,j,k,count=0,hashkey;
    cin>>num1>>num2;
    vector<int>v1[num1];
    vector<int>v2[num2];
    for(i=0;i<num1;i++)
    {
        cin>>data;
        hashkey=data%num1;
        v1[hashkey].push_back(data);
    }
    for(i=0;i<num2;i++)
    {
        cin>>data;
        hashkey=data%num2;
        v2[hashkey].push_back(data);
    }
    for(i=0;i<num2;i++)
    {
        if(v2[i].size()>0)
        {
            for(j=0;j<v2[i].size();j++)
            {
                int searchele=v2[i][j];
                hashkey=searchele%num1;
              for(k=0;k<v1[hashkey].size();k++)
                if(v1[hashkey][k]==searchele)
                {
                  count++;
                  break;
                }
            }
        }
    }
    if(count==num2)
     cout<<"Subset";
    else
     cout<<"Not a subset";
}

Program 12:

#include<bits/stdc++.h>
using namespace std;
int f=-1,r=-1;
#define max 100
int q[max];
void enque(int num)
{
 f=0;
 r++;
 q[r]=num;
}
void deque1(int m)
{
 for(int i=f;i<m;i++)
 {
 cout<<"Element deleted from queue is : "<<q[i]<<endl;
 q[i]=q[i+1];
 }
}
int main()
{
 int n;
 cin>>n;
 for(int i=0;i<n;i++)
 {
 int num;
 cin>>num;
 enque(num);
 }
 int m;
 cin>>m;
 deque1(m);
}

Program 13:

#include<bits/stdc++.h>
using namespace std;
struct node
{
 int data;
 node *next;
};
node *head=NULL;
void insert(int num)
{
 node *newnode=new node();
 newnode->data=num;
 if(head==NULL)
 {
 newnode->next=NULL;
 head=newnode;
 }
 else
 {
 newnode->next=head;
 head=newnode;
 }

}
void display()
{
 node* temp=head;
 while(temp!=0)
 {
 cout<<temp->data<<" ";
 temp=temp->next;
 }
}
int main()
{
 int a;
 cin>>a;
 for(int i=0;i<a;i++)
 {
 int num;
 cin>>num;
 insert(num);
 }
 display();
}

Program 14:

#include<bits/stdc++.h>
using namespace std;
struct node
{
 int data;
 node *next,*prev;
};
node *head=NULL;
void insert(int num)
{
 node *newnode=new node();
 newnode ->data=num;
 if(head==NULL)
 {
 head=newnode;
 }
 else
 {
 newnode->next=head;
 head->prev=newnode;
 head=newnode;
 }
}
void display()
{
 node *temp=head;
 while(temp!=0)
 {
 cout<<temp->data<<" ";
 temp=temp->next;
 }cout<<endl;

}
int main()
{
 int n;
 cin>>n;
 for(int i=0;i<n;i++)
 {
 int num;
 cin>>num;
 insert(num);
 }
 display();
 int n1;
 cin>>n1;
 insert(n1);
 display();
}

Program 15:

#include<bits/stdc++.h>
using namespace std;
int top=-1;
#define max 100
char stack1[max];
void push(char element)
{
 top++;
 stack1[top]=element;
}
void display()
{
 for(int i=top;i>=0;i--)
 {
 cout<<stack1[i];
 }
}
int main()
{
 string b;
 getline(cin,b);
 for(int i=0;i<b.length();i++){
 push(b[i]);
 }display();
}
